{"version":3,"file":"infobox.cjs.production.min.js","sources":["../src/InfoBox.tsx"],"sourcesContent":["/* global google */\n/* eslint-disable filenames/match-regex */\nimport { InfoBoxOptions } from './types'\n\nexport class InfoBox {\n  content: string | Node\n  disableAutoPan: boolean\n  maxWidth: number\n  pixelOffset: google.maps.Size\n  position: google.maps.LatLng\n  zIndex: number | undefined | null\n  boxClass: string\n  boxStyle: {\n    [key: string]: any\n  }\n  closeBoxMargin: string\n  closeBoxURL: string\n  infoBoxClearance: google.maps.Size\n  isHidden: boolean\n  alignBottom: boolean\n  pane: string\n  enableEventPropagation: boolean\n  div: HTMLDivElement | null\n  closeListener: google.maps.MapsEventListener | null\n  moveListener: google.maps.MapsEventListener | null\n  mapListener: google.maps.MapsEventListener | null\n  contextListener: google.maps.MapsEventListener | null\n  eventListeners: google.maps.MapsEventListener[] | null\n  fixedWidthSet: boolean | null\n\n  constructor(options: InfoBoxOptions = {}) {\n    this.extend(InfoBox, google.maps.OverlayView)\n\n    // Standard options (in common with google.maps.InfoWindow):\n    this.content = options.content || ''\n    this.disableAutoPan = options.disableAutoPan || false\n    this.maxWidth = options.maxWidth || 0\n    this.pixelOffset = options.pixelOffset || new google.maps.Size(0, 0)\n    this.position = options.position || new google.maps.LatLng(0, 0)\n    this.zIndex = options.zIndex || null\n\n    // Additional options (unique to InfoBox):\n    this.boxClass = options.boxClass || 'infoBox'\n    this.boxStyle = options.boxStyle || {}\n    this.closeBoxMargin = options.closeBoxMargin || '2px'\n    this.closeBoxURL = options.closeBoxURL || 'http://www.google.com/intl/en_us/mapfiles/close.gif'\n    if (options.closeBoxURL === '') {\n      this.closeBoxURL = ''\n    }\n    this.infoBoxClearance = options.infoBoxClearance || new google.maps.Size(1, 1)\n\n    if (typeof options.visible === 'undefined') {\n      if (typeof options.isHidden === 'undefined') {\n        options.visible = true\n      } else {\n        options.visible = !options.isHidden\n      }\n    }\n    this.isHidden = !options.visible\n\n    this.alignBottom = options.alignBottom || false\n    this.pane = options.pane || 'floatPane'\n    this.enableEventPropagation = options.enableEventPropagation || false\n\n    this.div = null\n    this.closeListener = null\n    this.moveListener = null\n    this.mapListener = null\n    this.contextListener = null\n    this.eventListeners = null\n    this.fixedWidthSet = null\n  }\n\n  createInfoBoxDiv(): void {\n    // This handler prevents an event in the InfoBox from being passed on to the map.\n    function cancelHandler(event: Event) {\n      event.cancelBubble = true\n      if (event.stopPropagation) {\n        event.stopPropagation()\n      }\n    }\n\n    // This handler ignores the current event in the InfoBox and conditionally prevents\n    // the event from being passed on to the map. It is used for the contextmenu event.\n    // eslint-disable-next-line  @getify/proper-arrows/this\n    const ignoreHandler = (event: Event) => {\n      event.returnValue = false\n\n      if (event.preventDefault) {\n        event.preventDefault()\n      }\n\n      if (!this.enableEventPropagation) {\n        cancelHandler(event)\n      }\n    }\n\n    if (!this.div) {\n      this.div = document.createElement('div')\n      this.setBoxStyle()\n\n      if (typeof this.content === 'string') {\n        this.div.innerHTML = this.getCloseBoxImg() + this.content\n      } else {\n        this.div.innerHTML = this.getCloseBoxImg()\n        this.div.appendChild(this.content)\n      }\n\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      const panes = this.getPanes()\n      panes[this.pane].appendChild(this.div) // Add the InfoBox div to the DOM\n\n      this.addClickHandler()\n\n      if (this.div.style.width) {\n        this.fixedWidthSet = true\n      } else {\n        if (this.maxWidth !== 0 && this.div.offsetWidth > this.maxWidth) {\n          this.div.style.width = this.maxWidth + 'px'\n          this.fixedWidthSet = true\n        } else {\n          // The following code is needed to overcome problems with MSIE\n          const bw = this.getBoxWidths()\n          this.div.style.width = this.div.offsetWidth - bw.left - bw.right + 'px'\n          this.fixedWidthSet = false\n        }\n      }\n\n      this.panBox(this.disableAutoPan)\n\n      if (!this.enableEventPropagation) {\n        this.eventListeners = []\n\n        // Cancel event propagation.\n        // Note: mousemove not included (to resolve Issue 152)\n        const events = [\n          'mousedown',\n          'mouseover',\n          'mouseout',\n          'mouseup',\n          'click',\n          'dblclick',\n          'touchstart',\n          'touchend',\n          'touchmove',\n        ]\n\n        for (let i = 0; i < events.length; i++) {\n          this.eventListeners.push(\n            google.maps.event.addDomListener(this.div, events[i], cancelHandler)\n          )\n        }\n\n        // Workaround for Google bug that causes the cursor to change to a pointer\n        // when the mouse moves over a marker underneath InfoBox.\n        this.eventListeners.push(\n          google.maps.event.addDomListener(\n            this.div,\n            'mouseover',\n            // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n            () => {\n              if (this.div) {\n                this.div.style.cursor = 'default'\n              }\n            }\n          )\n        )\n      }\n\n      this.contextListener = google.maps.event.addDomListener(\n        this.div,\n        'contextmenu',\n        ignoreHandler\n      )\n\n      /**\n       * This event is fired when the DIV containing the InfoBox's content is attached to the DOM.\n       * @name InfoBox#domready\n       * @event\n       */\n      google.maps.event.trigger(this, 'domready')\n    }\n  }\n\n  getCloseBoxImg(): string {\n    let img = ''\n\n    if (this.closeBoxURL !== '') {\n      img = '<img alt=\"\"'\n      img += ' aria-hidden=\"true\"'\n      img += \" src='\" + this.closeBoxURL + \"'\"\n      img += ' align=right' // Do this because Opera chokes on style='float: right;'\n      img += \" style='\"\n      img += ' position: relative;' // Required by MSIE\n      img += ' cursor: pointer;'\n      img += ' margin: ' + this.closeBoxMargin + ';'\n      img += \"'>\"\n    }\n\n    return img\n  }\n\n  addClickHandler(): void {\n    if (this.div && this.div.firstChild && this.closeBoxURL !== '') {\n      const closeBox = this.div.firstChild\n      this.closeListener = google.maps.event.addDomListener(\n        closeBox,\n        'click',\n        this.getCloseClickHandler()\n      )\n    } else {\n      this.closeListener = null\n    }\n  }\n\n  getCloseClickHandler() {\n    // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n    return (event: Event) => {\n      // 1.0.3 fix: Always prevent propagation of a close box click to the map:\n      event.cancelBubble = true\n\n      if (event.stopPropagation) {\n        event.stopPropagation()\n      }\n\n      /**\n       * This event is fired when the InfoBox's close box is clicked.\n       * @name InfoBox#closeclick\n       * @event\n       */\n      google.maps.event.trigger(this, 'closeclick')\n\n      this.close()\n    }\n  }\n\n  panBox(disablePan?: boolean): void {\n    if (this.div && !disablePan) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      const map: google.maps.Map | google.maps.StreetViewPanorama | null | undefined = this.getMap()\n\n      // Only pan if attached to map, not panorama\n      if (map instanceof google.maps.Map) {\n        let xOffset = 0\n        let yOffset = 0\n\n        const bounds = map.getBounds()\n        if (bounds && !bounds.contains(this.position)) {\n          // Marker not in visible area of map, so set center\n          // of map to the marker position first.\n          map.setCenter(this.position)\n        }\n\n        const mapDiv = map.getDiv()\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        const mapWidth = mapDiv.offsetWidth\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        const mapHeight = mapDiv.offsetHeight\n        const iwOffsetX = this.pixelOffset.width\n        const iwOffsetY = this.pixelOffset.height\n        const iwWidth = this.div.offsetWidth\n        const iwHeight = this.div.offsetHeight\n        const padX = this.infoBoxClearance.width\n        const padY = this.infoBoxClearance.height\n\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        const projection: google.maps.MapCanvasProjection = this.getProjection()\n        const pixPosition = projection.fromLatLngToContainerPixel(this.position)\n\n        if (pixPosition.x < -iwOffsetX + padX) {\n          xOffset = pixPosition.x + iwOffsetX - padX\n        } else if (pixPosition.x + iwWidth + iwOffsetX + padX > mapWidth) {\n          xOffset = pixPosition.x + iwWidth + iwOffsetX + padX - mapWidth\n        }\n        if (this.alignBottom) {\n          if (pixPosition.y < -iwOffsetY + padY + iwHeight) {\n            yOffset = pixPosition.y + iwOffsetY - padY - iwHeight\n          } else if (pixPosition.y + iwOffsetY + padY > mapHeight) {\n            yOffset = pixPosition.y + iwOffsetY + padY - mapHeight\n          }\n        } else {\n          if (pixPosition.y < -iwOffsetY + padY) {\n            yOffset = pixPosition.y + iwOffsetY - padY\n          } else if (pixPosition.y + iwHeight + iwOffsetY + padY > mapHeight) {\n            yOffset = pixPosition.y + iwHeight + iwOffsetY + padY - mapHeight\n          }\n        }\n\n        if (!(xOffset === 0 && yOffset === 0)) {\n          // Move the map to the shifted center.\n          map.panBy(xOffset, yOffset)\n        }\n      }\n    }\n  }\n\n  setBoxStyle(): void {\n    if (this.div) {\n      // Apply style values from the style sheet defined in the boxClass parameter:\n      this.div.className = this.boxClass\n\n      // Clear existing inline style values:\n      this.div.style.cssText = ''\n\n      // Apply style values defined in the boxStyle parameter:\n      const boxStyle = this.boxStyle\n      for (const i in boxStyle) {\n        if (boxStyle.hasOwnProperty(i)) {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n          this.div.style[i] = boxStyle[i]\n        }\n      }\n\n      // Fix for iOS disappearing InfoBox problem\n      // See http://stackoverflow.com/questions/9229535/google-maps-markers-disappear-at-certain-zoom-level-only-on-iphone-ipad\n      this.div.style.webkitTransform = 'translateZ(0)'\n\n      // Fix up opacity style for benefit of MSIE\n      if (typeof this.div.style.opacity !== 'undefined' && this.div.style.opacity !== '') {\n        // See http://www.quirksmode.org/css/opacity.html\n        const opacity = parseFloat(this.div.style.opacity || '')\n\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.div.style.msFilter =\n          '\"progid:DXImageTransform.Microsoft.Alpha(Opacity=' + opacity * 100 + ')\"'\n        this.div.style.filter = 'alpha(opacity=' + opacity * 100 + ')'\n      }\n\n      // Apply required styles\n      this.div.style.position = 'absolute'\n      this.div.style.visibility = 'hidden'\n      if (this.zIndex !== null) {\n        this.div.style.zIndex = this.zIndex + ''\n      }\n      if (!this.div.style.overflow) {\n        this.div.style.overflow = 'auto'\n      }\n    }\n  }\n\n  getBoxWidths(): { bottom: number; left: number; right: number; top: number } {\n    const bw = { top: 0, bottom: 0, left: 0, right: 0 }\n\n    if (!this.div) {\n      return bw\n    }\n\n    if (document.defaultView && document.defaultView.getComputedStyle) {\n      const ownerDocument = this.div.ownerDocument\n      const computedStyle =\n        ownerDocument && ownerDocument.defaultView\n          ? ownerDocument.defaultView.getComputedStyle(this.div, '')\n          : null\n\n      if (computedStyle) {\n        // The computed styles are always in pixel units (good!)\n        bw.top = parseInt(computedStyle.borderTopWidth || '', 10) || 0\n        bw.bottom = parseInt(computedStyle.borderBottomWidth || '', 10) || 0\n        bw.left = parseInt(computedStyle.borderLeftWidth || '', 10) || 0\n        bw.right = parseInt(computedStyle.borderRightWidth || '', 10) || 0\n      }\n    } else if (\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      document.documentElement.currentStyle // MSIE\n    ) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      const currentStyle = this.div.currentStyle\n\n      if (currentStyle) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // The current styles may not be in pixel units, but assume they are (bad!)\n        bw.top = parseInt(currentStyle.borderTopWidth || '', 10) || 0\n        bw.bottom = parseInt(currentStyle.borderBottomWidth || '', 10) || 0\n        bw.left = parseInt(currentStyle.borderLeftWidth || '', 10) || 0\n        bw.right = parseInt(currentStyle.borderRightWidth || '', 10) || 0\n      }\n    }\n\n    return bw\n  }\n\n  onRemove(): void {\n    if (this.div && this.div.parentNode) {\n      this.div.parentNode.removeChild(this.div)\n      this.div = null\n    }\n  }\n\n  draw(): void {\n    this.createInfoBoxDiv()\n\n    if (this.div) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      const projection: google.maps.MapCanvasProjection = this.getProjection()\n      const pixPosition = projection.fromLatLngToDivPixel(this.position)\n\n      this.div.style.left = pixPosition.x + this.pixelOffset.width + 'px'\n\n      if (this.alignBottom) {\n        this.div.style.bottom = -(pixPosition.y + this.pixelOffset.height) + 'px'\n      } else {\n        this.div.style.top = pixPosition.y + this.pixelOffset.height + 'px'\n      }\n\n      if (this.isHidden) {\n        this.div.style.visibility = 'hidden'\n      } else {\n        this.div.style.visibility = 'visible'\n      }\n    }\n  }\n\n  setOptions(options: InfoBoxOptions = {}): void {\n    if (typeof options.boxClass !== 'undefined') {\n      // Must be first\n      this.boxClass = options.boxClass\n      this.setBoxStyle()\n    }\n    if (typeof options.boxStyle !== 'undefined') {\n      // Must be second\n      this.boxStyle = options.boxStyle\n      this.setBoxStyle()\n    }\n    if (typeof options.content !== 'undefined') {\n      this.setContent(options.content)\n    }\n    if (typeof options.disableAutoPan !== 'undefined') {\n      this.disableAutoPan = options.disableAutoPan\n    }\n    if (typeof options.maxWidth !== 'undefined') {\n      this.maxWidth = options.maxWidth\n    }\n    if (typeof options.pixelOffset !== 'undefined') {\n      this.pixelOffset = options.pixelOffset\n    }\n    if (typeof options.alignBottom !== 'undefined') {\n      this.alignBottom = options.alignBottom\n    }\n    if (typeof options.position !== 'undefined') {\n      this.setPosition(options.position)\n    }\n    if (typeof options.zIndex !== 'undefined') {\n      this.setZIndex(options.zIndex)\n    }\n    if (typeof options.closeBoxMargin !== 'undefined') {\n      this.closeBoxMargin = options.closeBoxMargin\n    }\n    if (typeof options.closeBoxURL !== 'undefined') {\n      this.closeBoxURL = options.closeBoxURL\n    }\n    if (typeof options.infoBoxClearance !== 'undefined') {\n      this.infoBoxClearance = options.infoBoxClearance\n    }\n    if (typeof options.isHidden !== 'undefined') {\n      this.isHidden = options.isHidden\n    }\n    if (typeof options.visible !== 'undefined') {\n      this.isHidden = !options.visible\n    }\n    if (typeof options.enableEventPropagation !== 'undefined') {\n      this.enableEventPropagation = options.enableEventPropagation\n    }\n\n    if (this.div) {\n      this.draw()\n    }\n  }\n\n  setContent(content: string | Node): void {\n    this.content = content\n\n    if (this.div) {\n      if (this.closeListener) {\n        google.maps.event.removeListener(this.closeListener)\n        this.closeListener = null\n      }\n\n      // Odd code required to make things work with MSIE.\n      if (!this.fixedWidthSet) {\n        this.div.style.width = ''\n      }\n\n      if (typeof content === 'string') {\n        this.div.innerHTML = this.getCloseBoxImg() + content\n      } else {\n        this.div.innerHTML = this.getCloseBoxImg()\n        this.div.appendChild(content)\n      }\n\n      // Perverse code required to make things work with MSIE.\n      // (Ensures the close box does, in fact, float to the right.)\n      if (!this.fixedWidthSet) {\n        this.div.style.width = this.div.offsetWidth + 'px'\n        if (typeof content === 'string') {\n          this.div.innerHTML = this.getCloseBoxImg() + content\n        } else {\n          this.div.innerHTML = this.getCloseBoxImg()\n          this.div.appendChild(content)\n        }\n      }\n\n      this.addClickHandler()\n    }\n\n    /**\n     * This event is fired when the content of the InfoBox changes.\n     * @name InfoBox#content_changed\n     * @event\n     */\n    google.maps.event.trigger(this, 'content_changed')\n  }\n\n  setPosition(latLng: google.maps.LatLng): void {\n    this.position = latLng\n\n    if (this.div) {\n      this.draw()\n    }\n\n    /**\n     * This event is fired when the position of the InfoBox changes.\n     * @name InfoBox#position_changed\n     * @event\n     */\n    google.maps.event.trigger(this, 'position_changed')\n  }\n\n  setVisible(isVisible: boolean): void {\n    this.isHidden = !isVisible\n    if (this.div) {\n      this.div.style.visibility = this.isHidden ? 'hidden' : 'visible'\n    }\n  }\n\n  setZIndex(index: number): void {\n    this.zIndex = index\n\n    if (this.div) {\n      this.div.style.zIndex = index + ''\n    }\n\n    /**\n     * This event is fired when the zIndex of the InfoBox changes.\n     * @name InfoBox#zindex_changed\n     * @event\n     */\n    google.maps.event.trigger(this, 'zindex_changed')\n  }\n\n  getContent(): string | Node {\n    return this.content\n  }\n\n  getPosition(): google.maps.LatLng {\n    return this.position\n  }\n\n  getZIndex(): number | null | undefined {\n    return this.zIndex\n  }\n\n  getVisible(): boolean {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    const map: google.maps.Map | google.maps.StreetViewPanorama | null | undefined = this.getMap()\n    let isVisible\n\n    if (typeof map === 'undefined' || map === null) {\n      isVisible = false\n    } else {\n      isVisible = !this.isHidden\n    }\n\n    return isVisible\n  }\n\n  show(): void {\n    this.isHidden = false\n    if (this.div) {\n      this.div.style.visibility = 'visible'\n    }\n  }\n\n  hide(): void {\n    this.isHidden = true\n    if (this.div) {\n      this.div.style.visibility = 'hidden'\n    }\n  }\n\n  open(\n    map: google.maps.Map | google.maps.StreetViewPanorama,\n    anchor?: google.maps.MVCObject\n  ): void {\n    if (anchor) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      this.position = anchor.getPosition()\n      this.moveListener = google.maps.event.addListener(\n        anchor,\n        'position_changed',\n        // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n        () => {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n          const position = anchor.getPosition()\n          this.setPosition(position)\n        }\n      )\n\n      this.mapListener = google.maps.event.addListener(\n        anchor,\n        'map_changed',\n        // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n        () => {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n          this.setMap(anchor.map)\n        }\n      )\n    }\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.setMap(map)\n\n    if (this.div) {\n      this.panBox()\n    }\n  }\n\n  close() {\n    if (this.closeListener) {\n      google.maps.event.removeListener(this.closeListener)\n      this.closeListener = null\n    }\n\n    if (this.eventListeners) {\n      for (let i = 0; i < this.eventListeners.length; i++) {\n        google.maps.event.removeListener(this.eventListeners[i])\n      }\n      this.eventListeners = null\n    }\n\n    if (this.moveListener) {\n      google.maps.event.removeListener(this.moveListener)\n      this.moveListener = null\n    }\n\n    if (this.mapListener) {\n      google.maps.event.removeListener(this.mapListener)\n      this.mapListener = null\n    }\n\n    if (this.contextListener) {\n      google.maps.event.removeListener(this.contextListener)\n      this.contextListener = null\n    }\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.setMap(null)\n  }\n\n  extend(obj1: any, obj2: any): any {\n    return function applyExtend(object: any) {\n      // eslint-disable-next-line guard-for-in\n      for (const property in object.prototype) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        if (!this.prototype.hasOwnProperty(property)) {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n          this.prototype[property] = object.prototype[property]\n        }\n      }\n\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      return this\n    }.apply(obj1, [obj2])\n  }\n}\n"],"names":["options","extend","InfoBox","google","maps","OverlayView","content","disableAutoPan","maxWidth","pixelOffset","Size","position","LatLng","zIndex","boxClass","boxStyle","closeBoxMargin","closeBoxURL","infoBoxClearance","visible","isHidden","alignBottom","pane","enableEventPropagation","div","closeListener","moveListener","mapListener","contextListener","eventListeners","fixedWidthSet","createInfoBoxDiv","cancelHandler","event","cancelBubble","stopPropagation","this","document","createElement","setBoxStyle","innerHTML","getCloseBoxImg","appendChild","getPanes","addClickHandler","style","width","offsetWidth","bw","getBoxWidths","left","right","panBox","events","i","length","push","addDomListener","_this","cursor","returnValue","preventDefault","trigger","img","firstChild","getCloseClickHandler","_this2","close","disablePan","map","getMap","Map","xOffset","yOffset","bounds","getBounds","contains","setCenter","mapDiv","getDiv","mapWidth","mapHeight","offsetHeight","iwOffsetX","iwOffsetY","height","iwWidth","iwHeight","padX","padY","pixPosition","getProjection","fromLatLngToContainerPixel","x","y","panBy","className","cssText","hasOwnProperty","webkitTransform","opacity","parseFloat","msFilter","filter","visibility","overflow","top","bottom","defaultView","getComputedStyle","ownerDocument","computedStyle","parseInt","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","documentElement","currentStyle","onRemove","parentNode","removeChild","draw","fromLatLngToDivPixel","setOptions","setContent","setPosition","setZIndex","removeListener","latLng","setVisible","isVisible","index","getContent","getPosition","getZIndex","getVisible","show","hide","open","anchor","addListener","_this3","setMap","obj1","obj2","object","property","prototype","apply"],"mappings":"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"}